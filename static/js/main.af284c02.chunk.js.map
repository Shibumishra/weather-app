{"version":3,"sources":["components/SearchBar.js","api/index.js","components/CurrentWeather.js","components/HourlyForeCast.js","components/DailyForeCast.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","e","this","inputChange","preventDefault","formSubmitted","location","className","onSubmit","onFormSubmit","name","id","value","onChange","onInputChange","type","Component","apiClient","axios","create","baseURL","REACT_APP_API_KEY","getForeCast","lat","lon","get","then","res","data","currentWeather","url","icon","currentTemperature","description","src","alt","feelsLike","ForeCast","foreCastItem","hourlyForeCast","map","f","i","weather","ampm","hour","Date","dt","getHours","temp","toFixed","main","DailyForeCast","dailyForeCast","D","dayname","toLocaleDateString","weekday","day","min","max","App","state","setState","target","a","weatherRes","coord","foreCastRes","feels_like","hourly","daily","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af284c02.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./SearchBar.css\";\r\n\r\nexport class SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onInputChange(e) {\r\n        this.props.inputChange(e);\r\n    }\r\n\r\n    onFormSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.formSubmitted();\r\n    }\r\n\r\n\r\n    render() {\r\n        const location = this.props.location;\r\n\r\n        return (\r\n            <div className=\"search-bar\">\r\n                <form className=\"search-bar__form\" onSubmit={(e) => this.onFormSubmit(e)}>\r\n                    <input\r\n                        name=\"search\"\r\n                        id=\"search\"\r\n                        value={location}\r\n                        className=\"search-bar__input\"\r\n                        onChange={(e) =>\r\n                            this.onInputChange(e)}\r\n                    >\r\n                    </input>\r\n                    <button type=\"submit\" className=\"search-bar__button\">\r\n                        Search\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar\r\n","import axios from \"axios\";\r\n\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: \"http://api.openweathermap.org/data/2.5/\",\r\n  });\r\nconst REACT_APP_API_KEY = \"7c7aad546625d1da0665b0222c4945f9\";\r\n\r\nfunction getCurrentWeather(location){\r\n   return apiClient\r\n   .get(\r\n        `/weather?q=${location}&units=imperial&appid=${REACT_APP_API_KEY}&units=imperial`\r\n    );\r\n}\r\n\r\nfunction getForeCast(lat, lon){\r\n    return apiClient\r\n    .get(\r\n      `/onecall?lat=${lat}&lon=${lon}&APPID=${REACT_APP_API_KEY}&units=imperial`\r\n    )\r\n    .then((res) => res.data);\r\n}\r\n\r\n// function getDailyForeCast(lat, lon){\r\n//     return apiClient\r\n//     .get(\r\n//       `/onecall?lat=${lat}&lon=${lon}&APPID=${REACT_APP_API_KEY}&units=imperial`\r\n//     )\r\n//     .then((res) => res.data);\r\n// }\r\n\r\nexport {\r\n    getCurrentWeather,\r\n    getForeCast\r\n}","import React, { Component } from 'react'\r\nimport \"./CurrentWeather.css\";\r\n\r\nexport class currentWeather extends Component {\r\n    render() {\r\n            const url = `http://openweathermap.org/img/wn/${this.props.icon}@4x.png`;\r\n            \r\n        return (\r\n            <div className=\"current-weather\">\r\n                <div className=\"current-weather_content\">\r\n                    <p className=\"current-weather-temp\">{this.props.currentTemperature}</p>\r\n                    <p className=\"current-weather_description\">{this.props.description}</p>\r\n                    <img className=\"current-weather_icon\" src={url} alt={this.props.description} />\r\n                </div>\r\n                <div>\r\n                    <p className=\"current-weather_feels-like\">\r\n                        Feels Like {this.props.feelsLike}\r\n                    </p>\r\n                    <p>City: {this.props.location}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default currentWeather;\r\n","import React, { Component } from 'react';\r\nimport './HourlyForeCast.css';\r\n\r\nexport class ForeCast extends Component {\r\n    render() {\r\n        const foreCastItem = this.props.hourlyForeCast.map((f, i) =>{\r\n            const url = `http://openweathermap.org/img/wn/${f.weather[0].icon}@2x.png`\r\n            let ampm = 'AM';\r\n            let hour = new Date(f.dt * 1000).getHours();\r\n            if(hour > 12){\r\n                hour = hour - 12;\r\n                ampm = 'PM';\r\n            }\r\n            let temp = f.temp.toFixed(0);\r\n            return(\r\n                <div className=\"forecast-item\" key={i}>\r\n                    <p className=\"forecast-item_hour\">{hour}:00{ampm}</p>\r\n                    <p className=\"forecast-item_temp\">{temp}<sup>Â°C</sup></p>\r\n                    <img src={url} alt={f.weather.description} />  \r\n                    <p className=\"forecast-item_description\">{f.weather[0].main}</p>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"forecast\">\r\n                <h3 className=\"forecast-title\">Horuly Forecast</h3>\r\n                <div className=\"forecast-items\">{foreCastItem}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForeCast;\r\n","import React, { Component } from 'react';\r\nimport './HourlyForeCast.css';\r\n\r\nexport class DailyForeCast extends Component {\r\n    render() {\r\n        const foreCastItem = this.props.dailyForeCast.map((D, i) =>{\r\n            const url = `http://openweathermap.org/img/wn/${D.weather[0].icon}@2x.png`\r\n            let dayname = new Date(D.dt * 1000).toLocaleDateString(\"en\", {\r\n                weekday: \"long\",\r\n            });\r\n            let temp = D.temp.day.toFixed(0);\r\n            let min = D.temp.min.toFixed(0);\r\n            let max = D.temp.max.toFixed(0);\r\n\r\n            return(\r\n                <div className=\"forecast-item\" key={i}>\r\n\t\t\t\t\t<p>{dayname}</p>\r\n                    <img src={url} alt={D.weather.description} />\r\n                    <p>{temp} <sup>Â°C</sup> </p>\r\n                    <p>min: {min}<sup>Â°C</sup>  max: {max}<sup>Â°C</sup></p>\r\n                    <p>{D.weather[0].main}</p>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <>\r\n            <div className=\"forecast\">\r\n            <h3 className=\"forecast-title\">Daily forecast</h3>\r\n                <div className=\"forecast-items\">{foreCastItem}</div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyForeCast\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport { getCurrentWeather, getForeCast } from './api';\nimport CurrentWeather from './components/CurrentWeather';\nimport ForeCast from './components/HourlyForeCast';\nimport DailyForeCast from './components/DailyForeCast';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: \"\",\n      temp: \"\",\n      feelsLike: \"\",\n      description: \"\",\n      icon: \"\",\n      hourlyForeCast: [],\n      dailyForeCast: []\n    };\n  }\n  componentDidMount(){\n    this.onFormSubmit();\n  }\n\n  onInputChange(e) {\n    this.setState({\n      location: e.target.value,\n    });\n  }\n\n  async onFormSubmit() {\n    const weatherRes = await getCurrentWeather(this.state.location);\n    const lat = weatherRes.data.coord.lat;\n    const lon = weatherRes.data.coord.lon;\n    const foreCastRes = await getForeCast(lat, lon);\n\n    this.setState({\n      temp: weatherRes.data.main.temp,\n      feelsLike: weatherRes.data.main.feels_like,\n      description: weatherRes.data.weather[0].main,\n      icon: weatherRes.data.weather[0].icon,\n      hourlyForeCast: foreCastRes.hourly,\n      dailyForeCast: foreCastRes.daily \n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <SearchBar\n            location={this.state.location}\n            inputChange={(e) => this.onInputChange(e)}\n            formSubmitted={() => this.onFormSubmit()}\n          />\n          <CurrentWeather\n            currentTemperature={this.state.temp}\n            feelsLike={this.state.feelsLike}\n            description={this.state.description}\n            icon={this.state.icon}\n            location={this.state.location}\n          />\n          <ForeCast hourlyForeCast={this.state.hourlyForeCast} />\n\n          <DailyForeCast dailyForeCast = {this.state.dailyForeCast} />\n        </header>\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}